Index: app/src/main/java/com/example/kontabai/Activities/DriverSide/DriverDashBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kontabai.Activities.DriverSide;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.kontabai.Activities.RegistrationActivity;\r\nimport com.example.kontabai.Adapters.DriverSidePendingRideAdapter;\r\nimport com.example.kontabai.Classes.DriverSideRideModel;\r\nimport com.example.kontabai.R;\r\nimport com.firebase.ui.database.FirebaseRecyclerOptions;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class DriverDashBoard extends AppCompatActivity {\r\n    RecyclerView rv_pending, rv_accepted;\r\n    RelativeLayout rl_pending, rl_accepted;\r\n    DriverSidePendingRideAdapter driverSidePendingRideAdapter;\r\n    TextView tv_accepted, tv_pending, tv_logout;\r\n    ArrayList<DriverSideRideModel> arrayList;\r\n    ItemTouchHelper itemTouchHelper1, itemTouchHelper2;\r\n    DatabaseReference requestRef;\r\n    String currentDriverId;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_driver_dash_board);\r\n        initViews();\r\n\r\n        setListener();\r\n        makeSelection(\"pending\");\r\n        tv_logout.setOnClickListener(v -> startActivity(new Intent(DriverDashBoard.this, RegistrationActivity.class)\r\n                .addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK)));\r\n    }\r\n\r\n    private void setListener() {\r\n        rl_pending.setOnClickListener(v -> makeSelection(\"pending\"));\r\n        rl_accepted.setOnClickListener(v -> makeSelection(\"accepted\"));\r\n    }\r\n\r\n    private void makeSelection(String type) {\r\n        tv_accepted.setTextColor(getResources().getColor(R.color.black));\r\n        tv_pending.setTextColor(getResources().getColor(R.color.black));\r\n        rl_accepted.setBackground(null);\r\n        rl_pending.setBackground(null);\r\n        if (type.equalsIgnoreCase(\"accepted\")) {\r\n            rv_pending.setVisibility(View.GONE);\r\n            rv_accepted.setVisibility(View.VISIBLE);\r\n            tv_accepted.setTextColor(getResources().getColor(R.color.white));\r\n            rl_accepted.setBackgroundResource(R.drawable.screen_background_1);\r\n        } else {\r\n            rv_pending.setVisibility(View.VISIBLE);\r\n            rv_accepted.setVisibility(View.GONE);\r\n            tv_pending.setTextColor(getResources().getColor(R.color.white));\r\n            rl_pending.setBackgroundResource(R.drawable.screen_background_1);\r\n        }\r\n        setStaticData(type);\r\n    }\r\n\r\n    private void initViews() {\r\n        rl_accepted = findViewById(R.id.rl_accepted);\r\n        rl_pending = findViewById(R.id.rl_pending);\r\n        rv_pending = findViewById(R.id.view_pager);\r\n        rv_accepted = findViewById(R.id.view_pager2);\r\n        tv_accepted = findViewById(R.id.tv_accepted);\r\n        tv_pending = findViewById(R.id.tv_pending);\r\n        arrayList = new ArrayList<>();\r\n        tv_logout = findViewById(R.id.driver_logout_button);\r\n        itemTouchHelper1 = new ItemTouchHelper(simpleCallback1);\r\n        itemTouchHelper1.attachToRecyclerView(rv_pending);\r\n        requestRef= FirebaseDatabase.getInstance().getReference().child(\"requests\");\r\n        itemTouchHelper2 = new ItemTouchHelper(simpleCallback2);\r\n        itemTouchHelper2.attachToRecyclerView(rv_accepted);\r\n        currentDriverId=FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        startActivity(new Intent(DriverDashBoard.this, DriverSideProfileCreation.class)\r\n                .addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK));\r\n    }\r\n\r\n    private void setStaticData(String type) {\r\n        arrayList.clear();\r\n        if (type.equalsIgnoreCase(\"pending\")) {\r\n            FirebaseRecyclerOptions<DriverSideRideModel> options=\r\n                    new FirebaseRecyclerOptions.Builder<DriverSideRideModel>()\r\n                    .setQuery(FirebaseDatabase.getInstance().getReference().child(\"requests\"),DriverSideRideModel.class)\r\n                    .build();\r\n            RecyclerView.LayoutManager layoutManager=new LinearLayoutManager(this);\r\n            driverSidePendingRideAdapter=new DriverSidePendingRideAdapter(options);\r\n            rv_pending.setLayoutManager(layoutManager);\r\n            driverSidePendingRideAdapter.startListening();\r\n            rv_pending.setAdapter(driverSidePendingRideAdapter);\r\n        } else {\r\n            FirebaseRecyclerOptions<DriverSideRideModel> options=\r\n                    new FirebaseRecyclerOptions.Builder<DriverSideRideModel>()\r\n                            .setQuery(FirebaseDatabase.getInstance().getReference().child(\"requests\").child(FirebaseAuth.getInstance().getCurrentUser().getUid()),DriverSideRideModel.class)\r\n                            .build();\r\n            RecyclerView.LayoutManager layoutManager=new LinearLayoutManager(this);\r\n            driverSidePendingRideAdapter=new DriverSidePendingRideAdapter(options);\r\n            rv_accepted.setLayoutManager(layoutManager);\r\n            rv_accepted.setAdapter(driverSidePendingRideAdapter);\r\n            driverSidePendingRideAdapter.startListening();\r\n        }\r\n    }\r\n\r\n    //String deletedMovie = null;\r\n    ItemTouchHelper.SimpleCallback simpleCallback1 = new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT) {\r\n        @Override\r\n        public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {\r\n            return false;\r\n        }\r\n        @Override\r\n        public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n            final int position = viewHolder.getAdapterPosition();\r\n\r\n            if (direction == ItemTouchHelper.LEFT) {\r\n                //deletedMovie = String.valueOf(arrayList.get(position));\r\n                AlertDialog alertDialog = new AlertDialog.Builder(DriverDashBoard.this, R.style.verification_done).create();\r\n                View view = LayoutInflater.from(DriverDashBoard.this).inflate(R.layout.accept_request_dialogbox, null, false);\r\n                alertDialog.setView(view);\r\n                alertDialog.show();\r\n                alertDialog.setCancelable(false);\r\n                TextView textView = view.findViewById(R.id.pendingRequestButton);\r\n                textView.setOnClickListener(v -> {\r\n                    //arrayList.remove(position);\r\n                    String id=arrayList.get(position).getId();\r\n                    DatabaseReference databaseReference=FirebaseDatabase.getInstance().getReference().child(\"requests\").child(id);\r\n                    databaseReference.addValueEventListener(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            if(snapshot.exists()){\r\n                                databaseReference.child(\"driverId\").setValue(currentDriverId);\r\n                            }\r\n                        }\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            Toast.makeText(DriverDashBoard.this, \"Failed :-\"+error.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                    driverSidePendingRideAdapter.notifyItemRemoved(position);\r\n                    alertDialog.dismiss();\r\n                });\r\n            }\r\n        }\r\n    };\r\n    String deletedMovie2 = null;\r\n    ItemTouchHelper.SimpleCallback simpleCallback2 = new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT) {\r\n        @Override\r\n        public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public int getMovementFlags(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder) {\r\n            final int position = viewHolder.getAdapterPosition();\r\n            DriverSideRideModel driverSideRideModel1 = arrayList.get(position);\r\n            String status = driverSideRideModel1.getStatus();\r\n            if (status.equalsIgnoreCase(\"Completed\")) {\r\n                return makeMovementFlags(ItemTouchHelper.ACTION_STATE_IDLE, 0);\r\n            }\r\n            return super.getMovementFlags(recyclerView, viewHolder);\r\n        }\r\n\r\n        @SuppressLint({\"NotifyDataSetChanged\", \"SetTextI18n\"})\r\n        @Override\r\n        public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n            final int position = viewHolder.getAdapterPosition();\r\n//            DriverSideRideModel driverSideRideModel1 = arrayList.get(position);\r\n//            String status = driverSideRideModel1.getStatus();\r\n\r\n           if (direction == ItemTouchHelper.LEFT) {\r\n                deletedMovie2 = String.valueOf(arrayList.get(position));\r\n                AlertDialog alertDialog = new AlertDialog.Builder(DriverDashBoard.this, R.style.verification_done).create();\r\n                View view = LayoutInflater.from(DriverDashBoard.this).inflate(R.layout.delete_item_alert_box, null, false);\r\n                alertDialog.setView(view);\r\n                alertDialog.show();\r\n                alertDialog.setCancelable(false);\r\n                TextView heading=view.findViewById(R.id.textHeading);\r\n                heading.setText(\"Are you sure the Job is completed ?\");\r\n                TextView yesButton = view.findViewById(R.id.yesButton);\r\n                TextView noButton = view.findViewById(R.id.noButton);\r\n                yesButton.setOnClickListener(v -> {\r\n                    yesButton.setBackgroundResource(R.drawable.screen_background_2);\r\n                    Handler handler = new Handler();\r\n                    handler.postDelayed(() -> {\r\n\r\n                        //arrayList.get(position).setStatus(\"Completed\");\r\n                        driverSidePendingRideAdapter.notifyItemChanged(position);\r\n                        alertDialog.dismiss();\r\n                    }, 500);\r\n                });\r\n                noButton.setOnClickListener(v -> {\r\n                    noButton.setBackgroundResource(R.drawable.screen_background_2);\r\n                    Handler handler = new Handler();\r\n                    handler.postDelayed(() -> {\r\n                        alertDialog.dismiss();\r\n                        //DriverSideRideModel driverSideRideModel = arrayList.get(position);\r\n                        driverSidePendingRideAdapter.notifyItemChanged(position);\r\n                        noButton.setBackgroundResource(R.color.white);\r\n                    }, 500);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        rv_accepted.setVisibility(View.GONE);\r\n        rv_pending.setVisibility(View.VISIBLE);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kontabai/Activities/DriverSide/DriverDashBoard.java b/app/src/main/java/com/example/kontabai/Activities/DriverSide/DriverDashBoard.java
--- a/app/src/main/java/com/example/kontabai/Activities/DriverSide/DriverDashBoard.java	(revision 1f4fe58b3771aa7af39f645de2dd58d646853bed)
+++ b/app/src/main/java/com/example/kontabai/Activities/DriverSide/DriverDashBoard.java	(date 1635307833114)
@@ -145,7 +145,7 @@
                 alertDialog.setCancelable(false);
                 TextView textView = view.findViewById(R.id.pendingRequestButton);
                 textView.setOnClickListener(v -> {
-                    //arrayList.remove(position);
+                    //arrayList.remove(position);+
                     String id=arrayList.get(position).getId();
                     DatabaseReference databaseReference=FirebaseDatabase.getInstance().getReference().child("requests").child(id);
                     databaseReference.addValueEventListener(new ValueEventListener() {
